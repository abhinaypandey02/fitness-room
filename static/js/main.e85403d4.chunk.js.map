{"version":3,"sources":["components/authentication/authentication_text.tsx","components/authentication/login/login_text.tsx","graphqlQueries/userQueries.ts","contexts/user_context.tsx","components/authentication/login/login_form.tsx","configs/routes.ts","components/authentication/login/login_main.tsx","configs/texts.ts","components/navBar/navigation_bar_main.tsx","components/authentication/register/register_text.tsx","components/authentication/register/register_form.tsx","components/authentication/register/register_main.tsx","graphqlQueries/gymQueries.ts","components/gymList/gym_card.tsx","components/gymList/gym_list_main.tsx","components/userProfile/enrolled_gyms_tab.tsx","images/images_main.ts","images/default_pp.jpg","components/userProfile/user_info_tab.tsx","components/userProfile/owned_gyms_tab.tsx","components/userProfile/user_profile_main.tsx","components/gymPage/gym_page_main.tsx","components/userProfile/add_gym_page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["emailText","passwordText","loginFormTitle","ADD_USER","gql","GET_USER_BY_USERNAME","GET_USER_BY_EMAIL","VERIFY_USER","userContext","createContext","setUserContext","undefined","clientContext","useUser","useContext","useSetUser","useClient","UserContext","children","client","useState","user","setUser","useEffect","loggedInUser","localStorage","getItem","query","variables","email","then","result","data","removeItem","catch","Provider","value","setItem","LoginForm","formRef","useRef","clientRef","emailError","setEmailError","passwordError","setPasswordError","submittedOnce","setSubmittedOnce","validateText","text","FormControl","error","id","className","placeholder","type","ref","onSubmit","e","preventDefault","current","password","emailErrorText","test","String","toLowerCase","passwordErrorText","userVerification","firstName","lastName","username","enrolledGyms","isGymOwner","profilePicture","ownedGyms","Routes","LoginMain","to","Texts","NavigationBarMain","Navbar","bg","variant","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","NavDropdown","alignRight","title","Item","registerFormTitle","RegisterForm","firstNameError","setFirstNameError","lastNameError","setLastNameError","usernameError","setUsernameError","confirmPasswordError","setConfirmPasswordError","confirmPassword","checkBox","firstNameErrorText","lastnameErrorText","usernameErrorText","text1","text2","confirmPasswordText","mutate","mutation","checked","addUser","noValidate","htmlFor","RegisterMain","GYM_LIST_ALL","GET_GYM_BY_ID","ADD_ENROLLED_GYM","ADD_GYM","GymCard","gym","history","useHistory","description","length","substr","Carousel","imageURL","src","alt","map","url","name","location","city","rating","style","maxHeight","plans","price","data-mdb-ripple-color","onClick","push","gymID","moneyPaid","expired","GymListMain","useQuery","loading","gyms","EnrolledGymsTab","console","log","images","default_pp","UserInfoTab","height","width","OwnedGymsTab","UserProfileMain","useParams","userInfo","setUserInfo","MAIN","userT","userFromUsername","GymPageMain","setGym","indicators","plan","AddGymPage","nameError","setNameError","descriptionError","setDescriptionError","imageURLError","locationCityError","setLocationCityError","priceError","setPriceError","locationCity","descriptionErrorText","locationCityErrorText","priceErrorText","x","gymOwner","parseInt","err","App","document","body","backgroundImage","backgroundSize","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e85403d4.chunk.js","sourcesContent":["export const emailText=\"E-mail\"\nexport const passwordText=\"Password\"\nexport const confirmPasswordText=\"Confirm Password\"\nexport const firstNameText=\"First Name\"\nexport const lastNameText=\"Last Name\"\nexport const usernameText=\"Username\"","export const loginFormTitle=\"Sign-In\"\nexport const loginFormButtonTitle=loginFormTitle;\n","import {gql} from \"@apollo/client\";\n\nexport const ADD_USER = gql`mutation ADD_USER($firstName:String!,$username:String!,$lastName:String!,$email:String!,$password:String!,$isGymOwner:Boolean!){\n    addUser(firstName:$firstName,lastName:$lastName,username:$username,email:$email,password:$password,isGymOwner:$isGymOwner)\n}`\n\nexport const GET_USER_BY_USERNAME = gql`query GET_USER_BY_USERNAME($username:String!){\n    userFromUsername(username:$username){\n        firstName\n        lastName\n        email\n        isGymOwner\n        profilePicture\n        enrolledGyms {\n          gym{\n            name\n          }\n          subscriptionType\n          subscriptionMoneyPaid\n          subscriptionExpired\n        }\n        ownedGyms{\n            name\n        }\n    }\n}`\n\nexport const GET_USER_BY_EMAIL = gql`query GET_USER_BY_EMAIL($email:String!){\n    user(email:$email){\n        firstName\n        lastName\n        email\n        isGymOwner\n        profilePicture\n        enrolledGyms {\n          gym{\n            name\n          }\n          subscriptionType\n          subscriptionMoneyPaid\n          subscriptionExpired\n        }\n        ownedGyms{\n            name\n        }\n    }\n}`\n\nexport const VERIFY_USER = gql`query VERIFY_USER($email:String!,$password:String!){\n    userVerification(email:$email,password:$password){\n        firstName\n        lastName\n        username\n        email\n        isGymOwner\n        profilePicture\n        enrolledGyms {\n          subscriptionType\n          subscriptionMoneyPaid\n          subscriptionExpired\n        }\n        ownedGyms{\n            name\n        }\n    }\n}`","import {createContext, useState, useContext, useEffect, useRef} from \"react\";\nimport UserInterface from \"../interfaces/user_interface\";\nimport {ApolloConsumer, useLazyQuery, useQuery} from \"@apollo/client\";\nimport {GYM_LIST_ALL} from \"../graphqlQueries/gymQueries\";\nimport {GET_USER_BY_EMAIL} from \"../graphqlQueries/userQueries\";\n\nconst userContext = createContext<UserInterface | undefined | null>(null);\nconst setUserContext = createContext<any>(undefined);\nconst clientContext = createContext<any>(undefined);\n\nexport function useUser() {\n    return useContext(userContext);\n}\n\nexport function useSetUser() {\n    return useContext(setUserContext);\n}\nexport function useClient(){\n    return useContext(clientContext);\n}\n\nconst UserContext = ({children, client}: { children: any, client: any }) => {\n    const [user, setUser] = useState<UserInterface | undefined | null>(null);\n\n    function setUserData(user: UserInterface | undefined) {\n        if (user) localStorage.setItem(\"user\", user.email);\n        else localStorage.removeItem(\"user\");\n        setUser(user);\n    }\n\n    useEffect(() => {\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser && loggedInUser !== 'undefined') {\n            client.query({query: GET_USER_BY_EMAIL, variables: {email: loggedInUser}}).then((result: any) => {\n                if(result.data.user) setUser(result.data.user)\n                else {\n                    localStorage.removeItem(\"user\");\n                    setUser(undefined);\n                }\n            }).catch(() => {\n                localStorage.removeItem(\"user\");\n                setUser(undefined);\n            })\n        } else setUser(undefined)\n    }, [])\n    return <userContext.Provider value={user}>\n        <setUserContext.Provider value={setUserData}>\n            <clientContext.Provider value={client}>\n                {children}\n\n            </clientContext.Provider>\n        </setUserContext.Provider>\n    </userContext.Provider>;\n};\n\nexport default UserContext;\n","import {emailText, passwordText} from \"../authentication_text\";\nimport {loginFormButtonTitle} from \"./login_text\";\nimport {FormEvent, useRef, useState} from \"react\";\nimport {useSetUser} from \"../../../contexts/user_context\";\nimport {ApolloConsumer} from \"@apollo/client\";\nimport {VERIFY_USER} from \"../../../graphqlQueries/userQueries\";\nimport UserInterface from \"../../../interfaces/user_interface\";\n\nconst LoginForm = () => {\n    const formRef = useRef<any>(null);\n    const clientRef = useRef<any>(null);\n    const setUser = useSetUser();\n    const [emailError, setEmailError] = useState<string | null>(null);\n    const [passwordError, setPasswordError] = useState<string | null>(null);\n    const [submittedOnce, setSubmittedOnce] = useState(false);\n\n    function validateText(text: string): (string | null) {\n        if (text === '') return \"Required Field\";\n        return null;\n    }\n\n    function validateEmail(text: string): (string | null) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!re.test(String(text).toLowerCase())) {\n            return \"Not a valid e-mail\";\n        }\n        return null;\n    }\n\n    function onSubmit(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        setSubmittedOnce(true);\n        const {email, password} = formRef.current;\n        const emailErrorText = validateText(email.value) || validateEmail(email.value);\n        setEmailError(emailErrorText);\n        const passwordErrorText = validateText(password.value);\n        setPasswordError(passwordErrorText);\n        if (emailErrorText || passwordErrorText) return;\n        clientRef.current.query({\n            query: VERIFY_USER,\n            variables: {email: email.value, password: password.value}\n        }).then((result: any) => {\n            if (result.data.userVerification === null) {\n                setPasswordError(\"Email or password incorrect.\")\n            } else {\n                const {firstName, lastName, username, email, enrolledGyms, isGymOwner, profilePicture, ownedGyms} = result.data.userVerification;\n                const tempUser: UserInterface = {\n                    firstName, lastName, username, email, enrolledGyms, isGymOwner, profilePicture, ownedGyms\n                }\n                setUser(tempUser);\n            }\n        }).catch(()=>{setPasswordError(\"Cannot connect to network\")})\n\n    }\n\n    function FormControl(error: (string | null), id: string, text: string) {\n        return <div className=\"mt-3 col-sm-12 col-lg-9\">\n            <div className=\"form-group\">\n                <input placeholder={text} type={id === \"password\" ? \"password\" : \"email\"}\n                       className={\"form-control m-0 \" + (submittedOnce && (error ? \"is-invalid active\" : \"is-valid active\"))}\n                       id={id}/>\n\n            </div>\n            {error && <small className=\"text-danger align-items-start d-flex col-sm-12 col-lg-9\">{error}</small>}\n        </div>\n\n    }\n\n    return (\n        <form ref={formRef} onSubmit={onSubmit} className=\"text-center d-flex flex-column align-items-center w-100\">\n            <ApolloConsumer>\n                {client => {\n                    clientRef.current = client;\n                    return null;\n                }}\n            </ApolloConsumer>\n            {FormControl(emailError, 'email', emailText)}\n            {FormControl(passwordError, 'password', passwordText)}\n            <button className=\"btn btn-primary my-3\">{loginFormButtonTitle}</button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","export const Routes={\n    signIn:'/sign-in',\n    signUp:'/sign-up',\n    home:'/',\n    userProfile:'/user-profile',\n    signOut:'/sign-out',\n    userInfo:'/user/:username',\n    addGym:'/add-gym',\n    gymInfo:(id:string)=>'/gym/'+id\n}","import LoginForm from \"./login_form\";\nimport { loginFormTitle } from \"./login_text\";\nimport {Routes} from \"../../../configs/routes\";\nimport {Link} from \"react-router-dom\";\n\nconst LoginMain = () => {\n  return (\n    <div className=\"min-vh-100 d-flex align-items-center\">\n      <div className=\"bg-white col-9 col-lg-5 container d-flex flex-column align-items-center round-corners normal-shadow p-4\">\n        <span className=\"display-4 my-4 lobster-font\">{loginFormTitle}</span>\n        <LoginForm/>\n        <div>New User?<Link to={Routes.signUp}>Register</Link></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginMain;\n","export const Texts={\n    appName:\"Gang-ga\"\n}","import React from 'react';\nimport {Texts} from \"../../configs/texts\";\nimport {useSetUser, useUser} from \"../../contexts/user_context\";\nimport {BrowserRouter, Link} from \"react-router-dom\";\nimport {Routes} from \"../../configs/routes\";\nimport {Dropdown, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\n\nfunction NavigationBarMain() {\n    const user=useUser();\n    const setUser=useSetUser();\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Navbar.Brand as={Link} to={Routes.home}>{Texts.appName}</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"w-100 justify-content-end\">\n                    <Nav.Link  as={Link} to={Routes.home}>Home</Nav.Link>\n                    {user&&<NavDropdown alignRight title={user?.firstName} id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item as={Link} to={Routes.userProfile}>\n                            Profile\n                        </NavDropdown.Item>\n                        <NavDropdown.Item as={Link} to={Routes.signOut}>\n                            Sign Out\n                        </NavDropdown.Item>\n                    </NavDropdown>}\n                    {!user&&<Nav.Link as={Link} to={Routes.signUp}>Sign Up</Nav.Link>}\n                    {!user&&<Nav.Link as={Link} to={Routes.signIn}>Sign In</Nav.Link>}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n\nexport default NavigationBarMain;","export const registerFormTitle=\"Sign-Up\";\nexport const registerFormButtonText=registerFormTitle;","import {\n    confirmPasswordText,\n    emailText,\n    firstNameText,\n    lastNameText,\n    passwordText,\n    usernameText\n} from \"../authentication_text\";\nimport {registerFormButtonText} from \"./register_text\";\nimport {FormEvent, useRef, useState} from \"react\";\nimport {ApolloConsumer, useMutation} from \"@apollo/client\";\nimport {ADD_USER, GET_USER_BY_EMAIL} from \"../../../graphqlQueries/userQueries\";\nimport {useSetUser} from \"../../../contexts/user_context\";\nimport UserInterface from \"../../../interfaces/user_interface\";\n\nconst RegisterForm = () => {\n    const formRef = useRef<any>(null);\n    const clientRef = useRef<any>(null);\n    const setUser=useSetUser();\n    const [firstNameError, setFirstNameError] = useState<(string | null)>(null);\n    const [lastNameError, setLastNameError] = useState<(string | null)>(null);\n    const [usernameError, setUsernameError] = useState<(string | null)>(null);\n    const [emailError, setEmailError] = useState<(string | null)>(null);\n    const [passwordError, setPasswordError] = useState<(string | null)>(null);\n    const [confirmPasswordError, setConfirmPasswordError] = useState<(string | null)>(null);\n    const [submittedOnce, setSubmittedOnce] = useState(false);\n\n    function FormControl(error: (string | null), id: string, text: string) {\n        return <div className=\"mt-3 col-sm-12 col-lg-9\">\n            <div className=\"form-group\">\n                <input placeholder={text} type={id===\"password\"||id===\"confirmPassword\"?\"password\":id===\"email\"?\"email\":\"text\"}\n                       className={\"form-control m-0 \" + (submittedOnce && (error ? \"is-invalid active\" : \"is-valid active\"))}\n                       id={id}/>\n\n            </div>\n            {error && <small className=\"text-danger align-items-start d-flex col-sm-12 col-lg-9\">{error}</small>}\n        </div>\n\n    }\n\n    function validateText(text: string): (string | null) {\n        if (text === '') return \"Required Field\";\n        return null;\n    }\n\n    function validateEmail(text: string): (string | null) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!re.test(String(text).toLowerCase())) {\n            return \"Not a valid e-mail\";\n        }\n        return null;\n    }\n\n    function validatePasswords(text1: string, text2: string): (string | null) {\n        if (text1 === '' || text2 === '' || text1 !== text2) return \"Passwords don't match\";\n        return null;\n    }\n\n    function onSubmit(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        setSubmittedOnce(true);\n        const {firstName, lastName, email, password, confirmPassword, checkBox,username} = formRef.current;\n        const firstNameErrorText = validateText(firstName.value);\n        setFirstNameError(firstNameErrorText);\n        const lastnameErrorText = validateText(lastName.value);\n        setLastNameError(lastnameErrorText);\n        const usernameErrorText = validateText(username.value);\n        setUsernameError(usernameErrorText);\n        const emailErrorText = validateText(email.value) || validateEmail(email.value);\n        setEmailError(emailErrorText);\n        const passwordErrorText = validateText(password.value);\n        setPasswordError(passwordErrorText);\n        const confirmPasswordText = validateText(confirmPassword.value) || validatePasswords(password.value, confirmPassword.value);\n        setConfirmPasswordError(confirmPasswordText);\n        if (firstNameErrorText || lastnameErrorText || emailErrorText || passwordErrorText || confirmPasswordText) return\n        clientRef.current.mutate({\n            mutation: ADD_USER,\n            variables: {email: email.value,firstName:firstName.value,lastName:lastName.value,password:password.value,isGymOwner:checkBox.checked,username:username.value}\n        }).then((result: any) => {\n            if (result.data.addUser===\"pass\") {\n                const user:UserInterface={\n                    email: \"\",\n                    enrolledGyms: [],\n                    isGymOwner: checkBox.checked,\n                    ownedGyms: [],\n                    profilePicture: \"\",\n                    firstName:firstName.value,\n                    lastName:lastName.value,\n                    username:username.value\n                }\n                setUser(user)\n            } else {\n                if(result.data.addUser===\"username\") setUsernameError(\"Username taken.\")\n                else setEmailError(\"Email already in use.\")\n            }\n        }).catch(() => setConfirmPasswordError(\"Unable to access the internet.\"))\n    }\n\n    return (\n        <form ref={formRef} className=\"text-center d-flex flex-column align-items-center w-100\" onSubmit={onSubmit}\n              noValidate={true}>\n            <ApolloConsumer>\n                {client => {\n                    clientRef.current = client;\n                    return null;\n                }}\n            </ApolloConsumer>\n            {FormControl(firstNameError, \"firstName\", firstNameText)}\n            {FormControl(lastNameError, \"lastName\", lastNameText)}\n            {FormControl(usernameError, \"username\", usernameText)}\n            {FormControl(emailError, \"email\", emailText)}\n            {FormControl(passwordError, \"password\", passwordText)}\n            {FormControl(confirmPasswordError, \"confirmPassword\", confirmPasswordText)}\n            <div className=\"form-check mt-3\">\n                <input\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    id=\"checkBox\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"checkBox\">\n                    Gym Owner\n                </label>\n            </div>\n            <button className=\"btn btn-primary my-3\">{registerFormButtonText}</button>\n        </form>\n    );\n}\n\nexport default RegisterForm;","import RegisterForm from \"./register_form\";\nimport { registerFormTitle } from \"./register_text\";\nimport {Link} from \"react-router-dom\";\nimport {Routes} from \"../../../configs/routes\";\n\n\n\nconst RegisterMain = () => {\n  return (\n    <div className=\"min-vh-100 d-flex align-items-center\">\n      <div className=\"bg-white col-9 col-lg-5 container d-flex flex-column align-items-center round-corners normal-shadow p-4\">\n        <span className=\"display-4 my-4 lobster-font\">{registerFormTitle}</span>\n        <RegisterForm />\n          <div>Already Registered?<Link to={Routes.signIn}>Sign In</Link></div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterMain;\n","import {gql} from \"@apollo/client\";\n\nexport const GYM_LIST_ALL=gql`{\n    gyms{\n        name,\n        id,\n        description,\n        imageURL,\n        rating,\n        plans {\n          price\n        },\n        location {\n          city\n        },\n        gymOwner{\n          firstName,\n          lastName\n        },\n        enrolledUsers {\n          firstName\n          lastName\n        }\n        \n            \n    }\n}`\n\nexport const GET_GYM_BY_ID=gql`query GET_GYM_BY_ID($id:String!){\n    gym(id:$id){\n        name,\n        id,\n        description,\n        imageURL,\n        rating,\n        plans {\n          price\n        },\n        location {\n          city\n        },\n        gymOwner{\n          firstName,\n          lastName\n        },\n        enrolledUsers {\n          firstName\n          lastName\n        }\n        \n            \n    }\n}`\n\nexport const ADD_ENROLLED_GYM=gql`mutation ADD_ENROLLED_GYM($username:String!,$gymID:String!,$type:String,$moneyPaid:Float!,$expired:Boolean!){\n    addEnrolledGym(enrolledUser:$username,gym:$gymID,subscriptionType:$type,subscriptionMoneyPaid:$moneyPaid,subscriptionExpired:$expired){\n        subscriptionType\n    }\n}\n`\n\nexport const ADD_GYM=gql`mutation ADD_GYM($price:Float!,$name:String!,$description:String!,$imageURL:String!,$gymOwner:String!,$locationCity:String!){\n    addGym(price:$price, name:$name,description:$description,imageURL:$imageURL,gymOwner:$gymOwner,locationCity:$locationCity){\n        name\n    }\n}\n\n`","import React from 'react';\nimport GymInterface from \"../../interfaces/gym_interface\";\nimport {useHistory} from 'react-router-dom';\nimport {Routes} from \"../../configs/routes\";\nimport {Carousel} from \"react-bootstrap\";\nimport {ADD_ENROLLED_GYM} from \"../../graphqlQueries/gymQueries\";\nimport {useClient, useUser} from \"../../contexts/user_context\";\n\nconst maxLength = 180;\n\nfunction GymCard({gym}: { gym: GymInterface }) {\n    const user=useUser();\n    const client=useClient();\n    const history = useHistory();\n    let description = gym.description;\n    if (gym.description.length > maxLength) {\n        description = gym.description.substr(0, maxLength) + \"...\";\n    }\n    function onBook(){\n        client.mutate({\n            mutation:ADD_ENROLLED_GYM,\n            variables:{\n                username:user?.email,\n                gymID:gym.id,\n                moneyPaid:gym?.plans[0].price,\n                type:\"daily\",\n                expired:false\n            }\n        }).then(()=>{history.push('/user-profile')})\n    }\n\n    return (\n        <div className=\"card mb-3 w-100\">\n            <div className=\"row g-0\">\n                <div className=\"col-lg-6 p-4 d-flex align-items-center\">\n                    <Carousel>\n                        {gym.imageURL?.length === 0 &&\n                            <Carousel.Item>\n                                <img src=\"https://mdbootstrap.com/img/new/slides/041.jpg\"\n                                     className=\"d-block w-100\" alt=\"...\"/>\n                            </Carousel.Item>\n                        }\n                        {gym.imageURL.map(url =>\n                            <Carousel.Item>\n                                <img src={url} className=\"d-block w-100\" alt=\"gymImage\"/>\n                            </Carousel.Item>\n                        )}\n                    </Carousel>\n\n\n                </div>\n                <div className=\"col-lg-6 p-2\">\n                    <div className=\"card-body h-100 d-flex flex-column justify-content-between\">\n                        <div>\n                            <h4 className=\"card-title \">{gym.name}</h4>\n                            <h6 className=\"card-title \">{gym.location.city}</h6>\n                            <span className=\"badge bg-success my-2\">{gym.rating} <i className=\"fas fa-star\"/></span>\n                            <p className=\"card-text\" style={{maxHeight: \"ellipsis\"}}>\n                                {description}\n                            </p>\n                        </div>\n                        <div>\n                            <h3>₹{gym.plans[0].price}</h3>\n                            <button type=\"button\" className=\"btn btn-outline-dark mx-1\"\n                                    data-mdb-ripple-color=\"dark\" onClick={() => {\n                                history.push(Routes.gymInfo(gym.id))\n                            }}>\n                                View Details\n                            </button>\n                            <button onClick={onBook} type=\"button\" className=\"btn btn-success mx-1\">Book Now</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GymCard;","import React from 'react';\nimport GymInterface from \"../../interfaces/gym_interface\";\nimport GymCard from \"./gym_card\";\nimport {useQuery} from \"@apollo/client\";\nimport {GYM_LIST_ALL} from \"../../graphqlQueries/gymQueries\";\n\nfunction GymListMain() {\n    const {loading,error,data}=useQuery(GYM_LIST_ALL);\n    if(loading){\n        return <div>loading Gyms...</div>\n    }\n    if(error){\n        return <div>Error fetching gyms</div>\n    }\n    return (\n        <div className=\"container-md py-3\">\n            {data.gyms.map((gym:GymInterface)=>(<GymCard key={gym.id} gym={gym}/>))}\n        </div>\n    );\n}\n\nexport default GymListMain;","import React from 'react';\nimport UserInterface from \"../../interfaces/user_interface\";\n\nconst TAB_HEADING=\"Enrolled Gyms\"\n\nfunction EnrolledGymsTab({user}:{user:UserInterface}) {\n    console.log(user.enrolledGyms)\n    return (\n        <div className=\"flex-grow-1 bg-white normal-shadow round-corners m-2 p-2 px-4 h-100\">\n            <h2 className=\"m-2\">{TAB_HEADING}</h2>\n            {user.enrolledGyms.map(gym=>{\n                return <div>\n                    {gym.gym.name}\n                </div>\n            })}\n        </div>\n    );\n}\n\nexport default EnrolledGymsTab;","import default_pp from './default_pp.jpg';\n\nconst images={\n    default_pp\n}\n\nexport default images;","export default __webpack_public_path__ + \"static/media/default_pp.6ea4eaec.jpg\";","import React from 'react';\nimport images from \"../../images/images_main\";\nimport UserInterface from \"../../interfaces/user_interface\";\nimport {Routes} from \"../../configs/routes\";\nimport {useHistory} from \"react-router-dom\";\n\nconst userImageSize=150;\n\nfunction UserInfoTab({user}:{user:UserInterface}) {\n    const history=useHistory();\n    return (\n        <div className=\"bg-white normal-shadow col-11 col-md-auto round-corners m-2 p-2 px-4 d-flex flex-column align-items-center\">\n            <img height={userImageSize} width={userImageSize} className=\"border border-info border-3 rounded-circle\" src={images.default_pp} alt=\"profile picture\"/>\n            <div className=\"h3 m-2 mb-0\">{user.firstName} {user.lastName}</div>\n            <div className=\"m-2 mt-0\">{user.email}</div>\n            {user.isGymOwner&&<button onClick={()=>{history.push(Routes.addGym)}} className=\"btn btn-success\">Add Gym</button>}\n        </div>\n    );\n}\n\nexport default UserInfoTab;","import React from 'react';\nimport UserInterface from \"../../interfaces/user_interface\";\n\nconst TAB_HEADING=\"Owned Gyms\"\n\nfunction OwnedGymsTab({user}:{user:UserInterface}) {\n    console.log(user.enrolledGyms)\n    return (\n        <div className=\"flex-grow-1 bg-white normal-shadow round-corners m-2 p-2 px-4 h-100\">\n            <h2 className=\"m-2\">{TAB_HEADING}</h2>\n            {user.ownedGyms.map(gym=>{\n                return <div>\n                    {gym.name}\n                </div>\n            })}\n        </div>\n    );\n}\n\nexport default OwnedGymsTab;","import React, {useEffect, useState} from 'react';\nimport EnrolledGymsTab from \"./enrolled_gyms_tab\";\nimport {useClient, useUser} from \"../../contexts/user_context\";\nimport UserInterface from \"../../interfaces/user_interface\";\nimport UserInfoTab from \"./user_info_tab\";\nimport {useParams} from 'react-router-dom';\nimport {GET_USER_BY_USERNAME} from \"../../graphqlQueries/userQueries\";\nimport OwnedGymsTab from \"./owned_gyms_tab\";\nfunction UserProfileMain() {\n    const user:UserInterface | undefined | null=useUser();\n    const {username}=useParams<{username:string}>()\n    const client=useClient();\n    const [userInfo,setUserInfo]=useState<undefined|UserInterface|null>(undefined);\n\n    function MAIN(userT:UserInterface){\n        return (\n            <div className=\"m-2 d-flex flex-wrap justify-content-center \">\n                <UserInfoTab user={userT}/>\n                <EnrolledGymsTab user={userT}/>\n                {userT.isGymOwner&&<OwnedGymsTab user={userT}/>}\n            </div>\n        );\n    }\n\n    useEffect(()=>{\n        if(username) {\n            client.query({\n                query:GET_USER_BY_USERNAME,\n                variables:{username}\n            }).then((result:any)=>{\n                if(!result.data.userFromUsername)setUserInfo(null);\n                else setUserInfo(result.data.userFromUsername);\n            })\n        }\n        else setUserInfo(undefined);\n    },[username])\n    if(userInfo===null)return(\n        <div className=\"m-2 d-flex flex-wrap justify-content-center \">\n            NOT FOUND\n        </div>\n    )\n    if(userInfo===undefined){\n        if(user){\n            return (\n                MAIN(user)\n            );\n        }\n        else return null\n    }\n    return MAIN(userInfo)\n}\n\nexport default UserProfileMain;","import React, {useEffect, useState} from 'react';\nimport {Redirect, useHistory, useParams} from 'react-router-dom';\nimport {useClient, useUser} from \"../../contexts/user_context\";\nimport {ADD_ENROLLED_GYM, GET_GYM_BY_ID} from \"../../graphqlQueries/gymQueries\";\nimport GymInterface from \"../../interfaces/gym_interface\";\nimport {Carousel} from \"react-bootstrap\";\nimport UserInterface from \"../../interfaces/user_interface\";\n\nfunction GymPageMain() {\n    const history=useHistory();\n    const {id} = useParams<{ id: string }>();\n    const user:UserInterface | undefined | null=useUser();\n\n    const client = useClient();\n    const [gym, setGym] = useState<GymInterface | null | undefined>(undefined);\n\n    function onBook(){\n        client.mutate({\n            mutation:ADD_ENROLLED_GYM,\n            variables:{\n                username:user?.email,\n                gymID:id,\n                moneyPaid:gym?.plans[0].price,\n                type:\"daily\",\n                expired:false\n            }\n        }).then(()=>{history.push('/user-profile')})\n    }\n    useEffect(() => {\n        if (id)\n            client.query({query: GET_GYM_BY_ID, variables: {id}}).then((result: any) => {\n                if (result.data.gym) {\n                    setGym(result.data.gym);\n                } else setGym(null);\n            }).catch(() => {\n                setGym(null)\n            })\n    }, [id])\n    if (!id) return <div>NOT FOUND</div>\n    if (gym === undefined) return <div>LOADING</div>\n    if (gym === null) return <div>NOT FOUND</div>\n    return (\n        <div className=\"bg-white \">\n            <div className=\"container-fluid p-0\">\n                <Carousel indicators={true}>\n                    {gym.imageURL.map(url =>\n                        <Carousel.Item className=\"text-center\">\n                            <img src={url} alt=\"gym image\" className=\"\"/>\n                        </Carousel.Item>\n                    )}\n\n                </Carousel>\n            </div>\n            <div className=\"container my-3\">\n                <div className=\"row\">\n                    <div className=\"col-lg-8 my-3\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-fluid w-100\">\n                                    <div className=\"d-flex justify-content-between\">\n                                        <h1>{gym.name}</h1>\n                                        <span className=\"badge bg-success pt-3\">\n                                            <h5> {gym.rating}\n                                            <i className=\"fas fa-star\"/>\n                                            </h5>\n                                        </span>\n                                    </div>\n                                    <br/>\n                                    <h3>Description</h3>\n                                    <p>{gym.description}</p>\n                                    <br/>\n                                    <h3>Choose your plan</h3>\n                                    <br/>\n                                    {gym.plans.map((plan) =>\n                                        <div className=\"card mb-3\">\n                                            <div className=\"card-header\">Selected Category</div>\n                                            <div className=\"row g-0\">\n                                                <div className=\"col-md-8\">\n                                                    <div className=\"card-body\">\n                                                        <h5 className=\"card-title\">Plan 1</h5>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div className=\"px-4 py-2 d-flex justify-content-between\">\n                                                <h3 className=\"my-2\">Rs.{plan.price}</h3>\n                                                <button className=\"btn btn-primary\">Selected</button>\n                                            </div>\n                                        </div>)}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-4 my-3\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">Booking</div>\n                                        <div className=\"container \">\n                                            <h4 className=\"mt-3\">Rs.{gym.plans[0].price}</h4>\n                                            <br/>\n                                            <div className=\"d-flex justify-content-between mt-3\">Total\n                                                Price <strong>Rs.{gym.plans[0].price}</strong></div>\n                                            <button onClick={onBook} className=\"btn w-100 btn-success my-3\">Book</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GymPageMain;","import React, {FormEvent, useRef, useState} from 'react';\nimport {registerFormButtonText} from \"../authentication/register/register_text\";\nimport {useClient, useUser} from \"../../contexts/user_context\";\nimport {ADD_GYM} from \"../../graphqlQueries/gymQueries\";\nimport UserInterface from \"../../interfaces/user_interface\";\nimport {useHistory} from \"react-router-dom\";\n\nfunction AddGymPage() {\n    const history=useHistory();\n    const user: UserInterface | undefined | null = useUser();\n    const [submittedOnce, setSubmittedOnce] = useState(false);\n    const formRef = useRef<any>(null);\n    const [nameError, setNameError] = useState<(string | null)>(null);\n    const [descriptionError, setDescriptionError] = useState<(string | null)>(null);\n    const [imageURLError, setImageURLError] = useState<(string | null)>(null);\n    const [locationCityError, setLocationCityError] = useState<(string | null)>(null);\n    const [priceError, setPriceError] = useState<(string | null)>(null);\n    const client = useClient();\n\n    function validateText(text: string): (string | null) {\n        if (text === '') return \"Required Field\";\n        return null;\n    }\n\n    function onSubmit(e: FormEvent<HTMLFormElement>) {\n        e.preventDefault();\n        setSubmittedOnce(true);\n        const {name, description, imageURL, locationCity, price} = formRef.current;\n        const firstNameErrorText = validateText(name.value);\n        const descriptionErrorText = validateText(description.value);\n        const locationCityErrorText = validateText(locationCity.value);\n        const priceErrorText = validateText(price.value);\n        setNameError(firstNameErrorText);\n        setDescriptionError(descriptionErrorText);\n        setLocationCityError(locationCityErrorText);\n        setPriceError(priceErrorText);\n        if (firstNameErrorText || descriptionErrorText || locationCityErrorText||priceErrorText) return;\n        let x={\n            name: name.value,\n            description: description.value,\n            imageURL: imageURL.value,\n            gymOwner: user?.email,\n            locationCity: locationCity.value,\n            price:parseInt(price.value)\n        }\n        console.log(x)\n        client.mutate({\n            mutation: ADD_GYM,\n            variables: {\n                name: name.value,\n                description: description.value,\n                imageURL: imageURL.value,\n                gymOwner: user?.email,\n                locationCity: locationCity.value,\n                price:parseInt(price.value)\n            }\n        }).then(()=>{history.push('user-profile')}).catch((err: any)=>{console.log(err)})\n\n    }\n\n    function FormControl(error: (string | null), id: string, text: string) {\n        return <div className=\"mt-3 col-sm-12 col-lg-9\">\n            <div className=\"form-group m-0\">\n                <input placeholder={text}\n                       type={id === \"password\" || id === \"confirmPassword\" ? \"password\" : id === \"email\" ? \"email\" : id==\"price\"?\"number\":\"text\"}\n                       className={\"form-control m-0 \" + (submittedOnce && (error ? \"is-invalid active\" : \"is-valid active\"))}\n                       id={id}/>\n\n            </div>\n            {error && <small className=\"text-danger align-items-start d-flex col-sm-12 col-lg-9\">{error}</small>}\n        </div>\n\n    }\n\n    return (\n        <div className=\"min-vh-100 d-flex align-items-center\">\n            <div\n                className=\"bg-white col-9 col-lg-5 container d-flex flex-column align-items-center round-corners normal-shadow p-4\">\n                <span className=\"display-4 my-4 lobster-font\">Add Gym</span>\n                <form ref={formRef} className=\"text-center d-flex flex-column align-items-center w-100\"\n                      onSubmit={onSubmit}\n                      noValidate={true}>\n                    {FormControl(nameError, \"name\", \"Name\")}\n                    {FormControl(descriptionError, \"description\", \"Description\")}\n                    {FormControl(imageURLError, \"imageURL\", \"Image URL\")}\n                    {FormControl(locationCityError, \"locationCity\", \"City\")}\n                    {FormControl(priceError, \"price\", \"Price\")}\n                    <button className=\"btn btn-primary my-3\">Add Gym</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default AddGymPage;","import './App.css';\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport LoginMain from './components/authentication/login/login_main';\nimport NavigationBarMain from \"./components/navBar/navigation_bar_main\";\nimport {Routes} from \"./configs/routes\";\nimport {useSetUser, useUser} from \"./contexts/user_context\";\nimport RegisterMain from \"./components/authentication/register/register_main\";\nimport GymListMain from \"./components/gymList/gym_list_main\";\nimport UserProfileMain from \"./components/userProfile/user_profile_main\";\nimport GymPageMain from \"./components/gymPage/gym_page_main\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport AddGymPage from \"./components/userProfile/add_gym_page\";\n\nfunction App() {\n\n    const user = useUser();\n    const setUser = useSetUser();\n\n    document.body.style.backgroundImage = `url(\"https://lh3.googleusercontent.com/3ka-PrFl9Ye5IfoA2wUPmKmuVd9H_Q7KEbFPttRnJguii7rw3X58byx5oeTqd-LGhnGB5ibJy68DxQlUXnPOnILCXVbuOKgI__aCccI=w0\")`;\n    document.body.style.backgroundSize = \"cover\";\n    return (\n        <Router>\n            <NavigationBarMain/>\n            {user !== null &&\n            <Switch>\n                <Route path={Routes.home} exact={true}>\n                    {user ? <GymListMain/> : <Redirect to={Routes.signIn}/>}\n                </Route>\n                <Route path={Routes.signIn}>\n                    {user ? <Redirect to={Routes.home}/> : <LoginMain/>}\n                </Route>\n                <Route path={Routes.signUp}>\n                    {user ? <Redirect to={Routes.home}/> : <RegisterMain/>}\n\n                </Route>\n                <Route path={Routes.signOut}>\n                    {user ? () => {\n                        setUser(undefined);\n                        return <Redirect to={Routes.signIn}/>\n                    } : <Redirect to={Routes.signIn}/>}\n\n                </Route>\n                <Route path={Routes.addGym}>\n                    {user?<AddGymPage/>:<Redirect to={Routes.signIn}/>}\n                </Route>\n                <Route path={Routes.userProfile}>\n                    {user ? <UserProfileMain/> : <Redirect to={Routes.signIn}/>}\n                </Route>\n                <Route path={Routes.userInfo}>\n                    <UserProfileMain/>\n                </Route>\n                <Route path={Routes.gymInfo(':id')}>\n                    <GymPageMain/>\n                </Route>\n            </Switch>\n            }\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport UserContext from \"./contexts/user_context\";\nconst client = new ApolloClient({\n  uri: \"http://149.129.186.98:8000/graphql\",\n  cache: new InMemoryCache(),\n});\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <UserContext client={client}>\n        <App />\n      </UserContext>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}